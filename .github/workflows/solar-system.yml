name: 'Solar System Workflow'  # The name of your workflow

on:                             # Define the events that trigger the workflow
  workflow_dispatch:           # Allows manual trigger via the GitHub Actions UI
  push:                        # Triggered on a git push to the specified branches
    branches:
      - main                   # Trigger on push to the 'main' branch
      - 'feature/*'           # Trigger on push to any branch that matches the pattern 'feature/*'

env:
    MONGO_URI: ${{ vars.MONGO_URI }}
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
      strategy:
        matrix:
          nodejs-version: [18, 20]
          operating_system: [ubuntu-latest, macos-latest]
          exclude:
            - nodejs-version: 18
              operating_system: macos-latest
      runs-on: ${{ matrix.operating_system }}
      steps:
      - name: checkout repositorty
        uses: actions/checkout@v4

      - name: setup nodejs - v ${{ matrix.nodejs-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodejs-version }}
      
      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: install dependencies
        run: npm install
        
      - name: unit testing
        id: node-unit-testing-step
        run: npm test

      - name: archive test result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-result-${{ matrix.nodejs-version }}-${{ matrix.operating_system }}
          path: test-results.xml

    coverage-testing:
      runs-on: ubuntu-latest
      steps:
      - name: checkout repositorty
        uses: actions/checkout@v4

      - name: setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 18

          
      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: install dependencies
        run: npm install

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: archive test result
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-result
          path: coverage
          retention-days: 5
    
    docker:
      name: Containerization
      needs: [unit-testing, coverage-testing]
      runs-on: ubuntu-latest
      steps:
      - name: checkout repositorty
        uses: actions/checkout@v4

      - name: Dockerhub Login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
